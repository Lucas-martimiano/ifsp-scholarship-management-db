-- =========================================
-- SCRIPT DE CRIAÇÃO E EXCLUSÃO DAS TABELAS
-- =========================================

-- Criar o Banco de Dados
CREATE DATABASE ifsp_bolsas_db
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

-- Comando para Selecionar o Banco de Dados para Uso
USE ifsp_bolsas_db;

-- Tabela: DEPARTAMENTO_ACADEMICO
CREATE TABLE DEPARTAMENTO_ACADEMICO (
    ID_DEPARTAMENTO INT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL
);

-- Tabela: SUBAREA
CREATE TABLE SUBAREA (
    ID_SUBAREA INT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    FK_ID_DEPARTAMENTO INT NOT NULL,
    CONSTRAINT fk_subarea_departamento FOREIGN KEY (FK_ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO_ACADEMICO(ID_DEPARTAMENTO)
);

-- Tabela: DOCENTE
CREATE TABLE DOCENTE (
    MATRICULA VARCHAR(20) PRIMARY KEY,
    NOME VARCHAR(150) NOT NULL,
    DATA_ADMISSAO DATE NOT NULL,
    DATA_NASCIMENTO DATE,
    FK_ID_SUBAREA INT NOT NULL,
    CONSTRAINT fk_docente_subarea FOREIGN KEY (FK_ID_SUBAREA) REFERENCES SUBAREA(ID_SUBAREA)
);

-- Tabela: CURSO
CREATE TABLE CURSO (
    ID_CURSO INT PRIMARY KEY,
    NOME_CURSO VARCHAR(100) NOT NULL,
    NIVEL_CURSO VARCHAR(50),
    NOME_COORDENADOR VARCHAR(150),
    FK_ID_SUBAREA INT NOT NULL,
    CONSTRAINT fk_curso_subarea FOREIGN KEY (FK_ID_SUBAREA) REFERENCES SUBAREA(ID_SUBAREA)
);

-- Tabela: DISCIPLINA 
CREATE TABLE DISCIPLINA (
    ID_DISCIPLINA VARCHAR(10) PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    PERIODO INT,
    OPTATIVA BOOLEAN DEFAULT FALSE,
    CARGA_HORARIA INT NOT NULL,
    FK_DOCENTE_MATRICULA VARCHAR(20) NOT NULL,
    FK_ID_CURSO INT NOT NULL,
    CONSTRAINT fk_disciplina_docente FOREIGN KEY (FK_DOCENTE_MATRICULA) REFERENCES DOCENTE(MATRICULA),
    CONSTRAINT fk_disciplina_curso FOREIGN KEY (FK_ID_CURSO) REFERENCES CURSO(ID_CURSO)
);

-- Tabela: ALUNO
CREATE TABLE ALUNO (
    PRONTUARIO VARCHAR(20) PRIMARY KEY,
    NOME VARCHAR(150) NOT NULL,
    CPF VARCHAR(14) NOT NULL UNIQUE,
    FK_ID_CURSO INT NOT NULL,
    CONSTRAINT fk_aluno_curso FOREIGN KEY (FK_ID_CURSO) REFERENCES CURSO(ID_CURSO)
);

-- Tabela: ALUNO_DISCIPLINA 
CREATE TABLE ALUNO_DISCIPLINA (
    FK_ALUNO_PRONTUARIO VARCHAR(20) NOT NULL,
    FK_ID_DISCIPLINA VARCHAR(10) NOT NULL,
    FALTAS INT,
	NOTAS FLOAT,
    PRIMARY KEY (FK_ALUNO_PRONTUARIO, FK_ID_DISCIPLINA),
    CONSTRAINT fk_ad_aluno FOREIGN KEY (FK_ALUNO_PRONTUARIO) REFERENCES ALUNO(PRONTUARIO),
    CONSTRAINT fk_ad_disciplina FOREIGN KEY (FK_ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)
);

-- Tabela: PROJETO_ENSINO
CREATE TABLE PROJETO_ENSINO (
    ID_PROJETO INT PRIMARY KEY,
    NOME VARCHAR(200) NOT NULL,
    TIPO VARCHAR(50),
    STATUS VARCHAR(50),
    DURACAO INT,
    FK_DOCENTE_MATRICULA VARCHAR(20) NOT NULL,
    CONSTRAINT fk_projeto_docente FOREIGN KEY (FK_DOCENTE_MATRICULA) REFERENCES DOCENTE(MATRICULA)
);

-- Tabela: PROJETO_DISCIPLINA 
CREATE TABLE PROJETO_DISCIPLINA (
    FK_ID_PROJETO INT NOT NULL,
    FK_ID_DISCIPLINA VARCHAR(10) NOT NULL,
    PRIMARY KEY (FK_ID_PROJETO, FK_ID_DISCIPLINA),
    CONSTRAINT fk_pd_projeto FOREIGN KEY (FK_ID_PROJETO) REFERENCES PROJETO_ENSINO(ID_PROJETO),
    CONSTRAINT fk_pd_disciplina FOREIGN KEY (FK_ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)
);

-- Tabela: BOLSA
CREATE TABLE BOLSA (
    ID_BOLSA INT PRIMARY KEY,
    CARGA_HORARIA INT,
    DATA_TERMINO DATE,
    FK_ID_PROJETO INT NOT NULL,
    FK_ALUNO_PRONTUARIO VARCHAR(20) NOT NULL,
    CONSTRAINT fk_bolsa_projeto FOREIGN KEY (FK_ID_PROJETO) REFERENCES PROJETO_ENSINO(ID_PROJETO),
    CONSTRAINT fk_bolsa_aluno FOREIGN KEY (FK_ALUNO_PRONTUARIO) REFERENCES ALUNO(PRONTUARIO)
);

-- Tabela: TELEFONE_ALUNO
CREATE TABLE TELEFONE_ALUNO (
    FK_ALUNO_PRONTUARIO VARCHAR(20) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    PRIMARY KEY (FK_ALUNO_PRONTUARIO, TELEFONE),
    CONSTRAINT fk_tel_aluno FOREIGN KEY (FK_ALUNO_PRONTUARIO) REFERENCES ALUNO(PRONTUARIO)
);

-- Tabela: EMAIL_ALUNO
CREATE TABLE EMAIL_ALUNO (
    FK_ALUNO_PRONTUARIO VARCHAR(20) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    PRIMARY KEY (FK_ALUNO_PRONTUARIO, EMAIL),
    CONSTRAINT fk_email_aluno FOREIGN KEY (FK_ALUNO_PRONTUARIO) REFERENCES ALUNO(PRONTUARIO)
);

-- Tabela: TELEFONE_DOCENTE
CREATE TABLE TELEFONE_DOCENTE (
    FK_DOCENTE_MATRICULA VARCHAR(20) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    PRIMARY KEY (FK_DOCENTE_MATRICULA, TELEFONE),
    CONSTRAINT fk_tel_docente FOREIGN KEY (FK_DOCENTE_MATRICULA) REFERENCES DOCENTE(MATRICULA)
);

-- Tabela: EMAIL_DOCENTE
CREATE TABLE EMAIL_DOCENTE (
    FK_DOCENTE_MATRICULA VARCHAR(20) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    PRIMARY KEY (FK_DOCENTE_MATRICULA, EMAIL),
    CONSTRAINT fk_email_docente FOREIGN KEY (FK_DOCENTE_MATRICULA) REFERENCES DOCENTE(MATRICULA)
);


-- SCRIPT PARA DELETAR TODAS AS TABELAS DO BANCO DE DADOS
-- A ordem é importante para respeitar as chaves estrangeiras.

-- PASSO 1: Remover tabelas que possuem muitas dependências de outras
DROP TABLE IF EXISTS BOLSA;
DROP TABLE IF EXISTS PROJETO_DISCIPLINA;
DROP TABLE IF EXISTS ALUNO_DISCIPLINA;
DROP TABLE IF EXISTS TELEFONE_ALUNO;
DROP TABLE IF EXISTS EMAIL_ALUNO;
DROP TABLE IF EXISTS TELEFONE_DOCENTE;
DROP TABLE IF EXISTS EMAIL_DOCENTE;

-- PASSO 2: Remover tabelas que eram referenciadas acima
DROP TABLE IF EXISTS PROJETO_ENSINO;
DROP TABLE IF EXISTS ALUNO;
DROP TABLE IF EXISTS DISCIPLINA;

-- PASSO 3: Remover tabelas do próximo nível hierárquico
DROP TABLE IF EXISTS CURSO;
DROP TABLE IF EXISTS DOCENTE;

-- PASSO 4: Remover as tabelas base
DROP TABLE IF EXISTS SUBAREA;
DROP TABLE IF EXISTS DEPARTAMENTO_ACADEMICO;

-- COMANDO PARA EXCLUIR O BANCO DE DADOS INTEIRO
DROP DATABASE ifsp_bolsas_db;